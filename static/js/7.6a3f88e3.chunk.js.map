{"version":3,"sources":["components/common/Alert.js","components/common/PageTitle.js","components/user-registers/EditUserRegister.js","components/common/SearchInput.js","components/user-registers/TableUsersRegisters.js","pages/UsersRegisters.js"],"names":["Alert","text","close","className","onClick","PageTitle","title","Modal","props","EditSchema","Yup","shape","firstName","required","lastName","email","password","valid_until","valid","useState","editUserSuccess","setEditUserSuccess","editUserError","setEditUserError","editLoading","setEditLoading","submitUser","values","a","publicFetch","put","user","_id","data","message","response","setTimeout","setShowModal","window","location","reload","showModal","GradientBar","Card","initialValues","moment","format","onSubmit","validationSchema","FormSuccess","FormError","type","name","value","Label","FormInput","ariaLabel","placeholder","GradientButton","loading","SearchInput","searchUser","search","aria-label","icon","faArrowRight","TableCampus","mResponse","setMResponse","show","setShow","setUser","deleteUser","id","delete","idCampus","scope","users","map","key","aria-hidden","campus","edit","faEdit","faTrashAlt","Users","setUsers","setSearch","useEffect","get","listUsers","console","log","length"],"mappings":"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","file":"static/js/7.6a3f88e3.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert({text, close}) {\n    return (\n        <>\n            <div className=\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-teal-500\">\n                <span className=\"text-xl inline-block mr-5 align-middle\">\n                    <i className=\"fas fa-bell\" />\n                </span>\n                <span className=\"inline-block align-middle mr-8\">\n                    <b className=\"capitalize\">{text}</b>\n                </span>\n                <button className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\" onClick={close} >\n                    <span>Ã—</span>\n                </button>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nconst PageTitle = ({ title }) => (\n  <div className=\"my-1 sm:my-4\">\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\n      {title}\n    </h2>\n  </div>\n);\n\nexport default PageTitle;\n","import React,{useState} from \"react\";\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik, Field} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\nimport moment from 'moment'\n\nexport default function Modal(props) {\n    \n    const EditSchema = Yup.object().shape({\n        firstName: Yup.string().required(\n            'FirstName is required'\n        ), \n        lastName: Yup.string().required(\n            'LastName is required'\n        ),\n        email: Yup.string().required(\n            'Email is required'\n        ),\n        password: Yup.string().required(\n            'Password is required'\n        ), \n        valid_until: Yup.string().required(\n            'Valid Until is required'\n        ),\n        valid: Yup.string().required(\n            'Valid is required'\n        ),\n    });\n    const [editUserSuccess, setEditUserSuccess] = useState();\n    const [editUserError, setEditUserError] = useState();\n    \n    \n    const [editLoading, setEditLoading] = useState(false);\n    \n    const submitUser = async values => {\n        try {\n            setEditLoading(true);\n            const { data } = await publicFetch.put(\n                `user/${props.user._id}`,\n                values\n            );\n    \n            setEditUserSuccess(data.message);\n            setEditUserError('');\n\n        }\n        catch (error) {\n            setEditLoading(false);\n            const { data } = error.response;\n            setEditUserError(data.message);\n            setEditUserSuccess('');\n        }\n        finally{\n            setTimeout(() => {\n                props.setShowModal(false)\n                window.location.reload();\n            }, 1000);\n        }\n\n    };\n  return (\n    <>\n      {props.showModal ? (\n        <>\n            <section className=\"w-3/4 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                    firstName: props.user.firstName,\n                                    lastName: props.user.lastName,\n                                    email: props.user.email,\n                                    password: props.user.password,\n                                    valid_until: moment(props.user.valid_until).format(\"yyyy-MM-DTH:mm\"),\n                                    valid: props.user.valid\n                                }}\n                                onSubmit={values =>\n                                submitUser(values)\n                                }\n                                validationSchema={EditSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {editUserSuccess && (\n                                    <FormSuccess text={editUserSuccess} />\n                                    )}\n                                    {editUserError && (\n                                    <FormError text={editUserError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-3/4\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Valid Until\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Valid_until\"\n                                                    name=\"valid_until\"\n                                                    type=\"datetime-local\"\n                                                    placeholder=\"Valid_until\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Status\" />\n                                                </div>\n                                                <div>\n                                                    <label className=\"inline-flex items-center\">\n                                                        <Field type=\"checkbox\" className=\"form-checkbox mt-2 ml-4\" name=\"valid\" />\n                                                        <span className=\"ml-4 mt-2\">{values.valid ? \"Active\": \"Disable\"}</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Name\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"FirstName\"\n                                                    name=\"firstName\"\n                                                    type=\"text\"\n                                                    placeholder=\"FirstName\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"LastName\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"LastName\"\n                                                    name=\"lastName\"\n                                                    type=\"text\"\n                                                    placeholder=\"LastName\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-3/4\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Email\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Email\"\n                                                    name=\"email\"\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Password\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Password\"\n                                                    name=\"password\"\n                                                    type=\"password\"\n                                                    placeholder=\"Password\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"mt-6 flex items-center justify-center\">\n                                    <GradientButton\n                                        type=\"submit\"\n                                        text=\"Save\"\n                                        loading={editLoading}\n                                    />\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react'\nimport { Form, Formik, Field} from 'formik';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function SearchInput({searchUser}) {\n\n    return (\n        <>\n           <div className=\"flex\">\n                <Formik\n                    initialValues={{\n                        search: ''\n                    }}\n                    onSubmit={values =>\n                        searchUser(values)\n                    }\n                >\n                {() => (\n                     <Form>\n                         <div className=\"flex\">\n                            <Field\n                                className=\"py-2 px-4 border bg-gray-400 border-gray-300 rounded-full focus:outline-none w-32 sm:w-64\"\n                                aria-label=\"Search\"\n                                name=\"search\" \n                                type=\"text\"\n                                placeholder=\"Search\"\n\n                            />\n                            <button className=\"rounded-full bg-gradient px-4 ml-2 text-white flex items-center text-xs focus:outline-none shadow-lg\" type=\"submit\">\n                                <FontAwesomeIcon icon={faArrowRight} />\n                            </button>\n                        </div>\n                     </Form>\n                )}\n                </Formik>\n            </div> \n        </>\n    )\n}\n","import React,{ useState } from 'react'\nimport Card from '../common/Card';\nimport GradientBar from '../common/GradientBar';\nimport { publicFetch } from '../../util/fetch';\nimport Alert from '../common/Alert'\nimport EditUser from './EditUserRegister'\nimport moment from 'moment'\nimport SearchInput from '../common/SearchInput'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default function TableCampus(props) {\n\n    const [mResponse, setMResponse] = useState();\n    const [show, setShow] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [user, setUser] = useState();\n\n    const deleteUser = async (id)=>{\n        try {\n            const { data } = await publicFetch.delete(\n            `${props.idCampus}/user/delete/${id}` \n            );\n                \n            setMResponse(data.message)\n            setShow(true)\n        }\n        catch (error) {\n            const { data } = error.response;\n            setMResponse(data.message)\n            setShow(true)\n        }\n        finally{\n            window.location.reload();\n        }\n    }\n\n    const close = ()=>{\n        setShow(false)\n    }\n\n    const edit = (user)=>{\n        setUser(user)\n        setShowModal(true)\n    }\n\n    // const getCampus = async id =>{\n\n    //     console.log(id)\n\n    //     if(id==null){\n    //         try {\n    //             const { data } = await publicFetch.get(\n    //             `campus/${id}` \n    //             );\n                \n    //             setCmp(data.campus)\n    //         }\n    //         catch (error) {\n    //             const { data } = error.response;\n    //             setCmp(data.message);\n    //         }\n    //     }\n\n    // }\n\n    return (\n        <>\n            <div className=\"flex mb-6\"><SearchInput searchUser={props.searchUser} /></div>\n            {showModal?<EditUser setShowModal={setShowModal} user={user} showModal={showModal}/>:<>\n            <GradientBar />\n            <Card>\n                {show?<Alert text={mResponse} close={close}/>:null}\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden\">\n                    <table className=\"min-w-full leading-normal\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    name\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    lastname\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    email\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    campus\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    valid until\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    valid\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    edit\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    delete\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.users.map((user) => (\n                            <tr key={user._id}>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                    <div className=\"flex items-center justify-center\">\n                                        <div className=\"ml-3\">\n                                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                {user.firstName}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                    <div className=\"flex items-center justify-center\">\n                                        <div className=\"ml-3\">\n                                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                {user.lastName}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                    <div className=\"flex items-center justify-center\">\n                                        <div className=\"ml-3\">\n                                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                {user.email}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                        <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                        </span>\n                                        <span className=\"relative\">\n                                            {user.campus?\"Yes\":\"No\"}\n                                        </span>\n                                    </span>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm ml-5 text-center\">\n                                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                        <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                        </span>\n                                        <span className=\"relative\">\n                                            {moment(user.valid_until).format('MMMM Do YYYY, hh:mm a')}\n                                        </span>\n                                    </span>\n                                </td>\n\n                                <td className=\"px-0 py-5 border-b border-gray-200  text-sm items-center text-center\">\n                                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                        <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                        </span>\n                                        <span className=\"relative\">\n                                            {user.valid? \"Active\":\"Disable\"}\n                                        </span>\n                                    </span>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200  text-sm items-center\">\n                                    <div className=\"flex justify-center\">\n                                        <button className=\"rounded-full shadow flex items-center px-3 py-3\" onClick={()=>edit(user)}>\n                                            <FontAwesomeIcon icon={faEdit} />\n                                        </button>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 text-sm items-center\">\n                                    <div className=\"flex justify-center\">\n                                        <button className=\"rounded-full shadow hover:text-indigo-900 flex items-center px-3 py-3 \" onClick={()=>deleteUser(user._id)}>\n                                            <FontAwesomeIcon icon={faTrashAlt} />\n                                        </button>\n                                    </div>\n                                </td>\n                            </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </Card></>}\n        </>\n    )\n}\n","import React , {useState, useEffect} from 'react'\nimport TableUsers from '../components/user-registers/TableUsersRegisters'\nimport PageTitle from '../components/common/PageTitle';\nimport { publicFetch } from '../util/fetch';\n\nexport default function Users() {\n    const [users, setUsers ]=  useState([])\n    const [search, setSearch] = useState(false);\n\n    useEffect(() => { \n        const listUsers = async () => {\n            const {data} = await publicFetch.get(\n                `users`\n            )\n    \n            setUsers(data.users)\n        }\n        if(!search){\n            listUsers()\n        }\n    })\n\n    const searchUser = async values =>{\n        setSearch(true)\n        try{\n\n            const { data } = await publicFetch.get(\n            `users/${values.search}` \n            );\n\n            console.log(data.users)\n\n            if(data.users.length===0){\n                console.log('entro')\n\n                const { data } = await publicFetch.get(\n                    `usersCampus/${values.search}` \n                );\n\n                setSearch(true)\n                console.log(data.users)\n                setUsers(data.users)\n                \n            }\n            else{\n                setSearch(true)\n                setUsers(data.users)\n            }\n        }\n        catch(error){\n            setSearch(true)\n            console.log(error)\n        }\n                \n    }\n\n    return (\n        <>\n            <div className=\"container mx-auto px-4\">\n                <PageTitle title=\"Users\" />\n                <div className=\"py-8\">\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div>\n                            <TableUsers users={users} searchUser={searchUser}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}