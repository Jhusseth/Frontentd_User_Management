{"version":3,"sources":["components/common/Alert.js","components/common/PageTitle.js","components/user/AddUser.js","components/user/EditUser.js","components/user/TableUsers.js","pages/Users.js"],"names":["Alert","text","close","className","onClick","PageTitle","title","AddCampus","props","AddUserSchema","Yup","shape","firstName","required","lastName","email","password","valid_until","valid","useState","addUserSuccess","setSignupSuccess","addUserError","setSignupError","addLoading","setLoginLoading","submitCredentials","credentials","a","publicFetch","post","idCampus","data","console","log","message","setTimeout","window","location","reload","response","showAddPanel","GradientBar","Card","initialValues","onSubmit","values","validationSchema","FormSuccess","FormError","type","name","value","Label","FormInput","ariaLabel","placeholder","GradientButton","loading","Modal","EditSchema","editUserSuccess","setEditUserSuccess","editUserError","setEditUserError","editLoading","setEditLoading","submitUser","put","user","_id","setShowModal","showModal","moment","format","campus","TableCampus","mResponse","setMResponse","show","setShow","setUser","deleteUser","id","delete","scope","users","map","key","aria-hidden","edit","icon","faEdit","faTrashAlt","Users","showAdd","setShowAdd","setUsers","useParams","useEffect","get","listUsers","style","display","showPanel"],"mappings":"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","file":"static/js/6.7f372192.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert({text, close}) {\n    return (\n        <>\n            <div className=\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-teal-500\">\n                <span className=\"text-xl inline-block mr-5 align-middle\">\n                    <i className=\"fas fa-bell\" />\n                </span>\n                <span className=\"inline-block align-middle mr-8\">\n                    <b className=\"capitalize\">{text}</b>\n                </span>\n                <button className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\" onClick={close} >\n                    <span>Ã—</span>\n                </button>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nconst PageTitle = ({ title }) => (\n  <div className=\"my-1 sm:my-4\">\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\n      {title}\n    </h2>\n  </div>\n);\n\nexport default PageTitle;\n","import React,{ useState } from 'react'\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik, Field} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\n// import { Redirect } from 'react-router-dom';\n\nexport default function AddCampus(props) {\n\n\n    const AddUserSchema = Yup.object().shape({\n        firstName: Yup.string().required(\n            'FirstName is required'\n        ), \n        lastName: Yup.string().required(\n            'LastName is required'\n          ),\n        email: Yup.string().required(\n            'Email is required'\n        ),\n        password: Yup.string().required(\n            'Password is required'\n        ), \n        valid_until: Yup.string().required(\n            'Valid Until is required'\n        ),\n        valid: Yup.string().required(\n            'Valid is required'\n        ),\n    });\n\n    const [addUserSuccess, setSignupSuccess] = useState();\n    const [addUserError, setSignupError] = useState();\n    \n    \n    const [addLoading, setLoginLoading] = useState(false);\n    \n    const submitCredentials = async credentials => {\n        try {\n            setLoginLoading(true);\n            const { data } = await publicFetch.post(\n                `${props.idCampus}/users`,\n                credentials\n            );\n\n            console.log(credentials)\n\n            setSignupSuccess(data.message);\n            setSignupError('');\n        \n            setTimeout(() => {\n                // setRedirectOnLogin(true);\n                window.location.reload();\n            }, 50);\n\n        }\n        catch (error) {\n            setLoginLoading(false);\n            const { data } = error.response;\n            setSignupError(data.message);\n            setSignupSuccess('');\n        }\n        finally{\n            props.showAddPanel()\n            window.location.reload();\n        }\n    };\n    return (\n        <>\n            <section className=\"w-3/4 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                    firstName: '',\n                                    lastName: '',\n                                    email: '',\n                                    password: '',\n                                    valid_until: '',\n                                    valid: false\n                                }}\n                                onSubmit={values =>\n                                submitCredentials(values)\n                                }\n                                validationSchema={AddUserSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {addUserSuccess && (\n                                    <FormSuccess text={addUserSuccess} />\n                                    )}\n                                    {addUserError && (\n                                    <FormError text={addUserError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-3/4\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Valid Until\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Valid_until\"\n                                                    name=\"valid_until\"\n                                                    type=\"datetime-local\"\n                                                    placeholder=\"Valid_until\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Status\" />\n                                                </div>\n                                                <div>\n                                                    <label className=\"inline-flex items-center\">\n                                                        <Field type=\"checkbox\" className=\"form-checkbox mt-2 ml-4\" name=\"valid\" />\n                                                        <span className=\"ml-4 mt-2\">{values.valid ? \"Active\": \"Disable\"}</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Name\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"FirstName\"\n                                                    name=\"firstName\"\n                                                    type=\"text\"\n                                                    placeholder=\"FirstName\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"LastName\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"LastName\"\n                                                    name=\"lastName\"\n                                                    type=\"text\"\n                                                    placeholder=\"LastName\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-3/4\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Email\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Email\"\n                                                    name=\"email\"\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Password\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Password\"\n                                                    name=\"password\"\n                                                    type=\"password\"\n                                                    placeholder=\"Password\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"mt-6 flex items-center justify-center\">\n                                    <GradientButton\n                                        type=\"submit\"\n                                        text=\"Save\"\n                                        loading={addLoading}\n                                    />\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n    );\n};\n","import React,{useState} from \"react\";\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik, Field} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\nimport moment from 'moment'\n\nexport default function Modal(props) {\n    \n    const EditSchema = Yup.object().shape({\n        firstName: Yup.string().required(\n            'FirstName is required'\n        ), \n        lastName: Yup.string().required(\n            'LastName is required'\n        ),\n        email: Yup.string().required(\n            'Email is required'\n        ),\n        password: Yup.string().required(\n            'Password is required'\n        ), \n        valid_until: Yup.string().required(\n            'Valid Until is required'\n        ),\n        valid: Yup.string().required(\n            'Valid is required'\n        ),\n    });\n    const [editUserSuccess, setEditUserSuccess] = useState();\n    const [editUserError, setEditUserError] = useState();\n    \n    \n    const [editLoading, setEditLoading] = useState(false);\n    \n    const submitUser = async values => {\n        try {\n            setEditLoading(true);\n            const { data } = await publicFetch.put(\n                `${props.idCampus}/user/${props.user._id}`,\n                values\n            );\n    \n            setEditUserSuccess(data.message);\n            setEditUserError('');\n\n        }\n        catch (error) {\n            setEditLoading(false);\n            const { data } = error.response;\n            setEditUserError(data.message);\n            setEditUserSuccess('');\n        }\n        finally{\n            setTimeout(() => {\n                props.setShowModal(false)\n                window.location.reload();\n            }, 1000);\n        }\n\n    };\n  return (\n    <>\n      {props.showModal ? (\n        <>\n            <section className=\"w-3/4 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                    firstName: props.user.firstName,\n                                    lastName: props.user.lastName,\n                                    email: props.user.email,\n                                    password: props.user.password,\n                                    valid_until: moment(props.user.valid_until).format(\"yyyy-MM-DTH:mm\"),\n                                    valid: props.user.valid,\n                                    campus:props.idCampus\n                                }}\n                                onSubmit={values =>\n                                submitUser(values)\n                                }\n                                validationSchema={EditSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {editUserSuccess && (\n                                    <FormSuccess text={editUserSuccess} />\n                                    )}\n                                    {editUserError && (\n                                    <FormError text={editUserError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-3/4\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Valid Until\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Valid_until\"\n                                                    name=\"valid_until\"\n                                                    type=\"datetime-local\"\n                                                    placeholder=\"Valid_until\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Status\" />\n                                                </div>\n                                                <div>\n                                                    <label className=\"inline-flex items-center\">\n                                                        <Field type=\"checkbox\" className=\"form-checkbox mt-2 ml-4\" name=\"valid\" />\n                                                        <span className=\"ml-4 mt-2\">{values.valid ? \"Active\": \"Disable\"}</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Name\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"FirstName\"\n                                                    name=\"firstName\"\n                                                    type=\"text\"\n                                                    placeholder=\"FirstName\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"LastName\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"LastName\"\n                                                    name=\"lastName\"\n                                                    type=\"text\"\n                                                    placeholder=\"LastName\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-3/4\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Email\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Email\"\n                                                    name=\"email\"\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Password\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Password\"\n                                                    name=\"password\"\n                                                    type=\"password\"\n                                                    placeholder=\"Password\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"mt-6 flex items-center justify-center\">\n                                    <GradientButton\n                                        type=\"submit\"\n                                        text=\"Save\"\n                                        loading={editLoading}\n                                    />\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n      ) : null}\n    </>\n  );\n}\n","import React,{ useState } from 'react'\nimport Card from '../common/Card';\nimport GradientBar from '../common/GradientBar';\nimport { publicFetch } from '../../util/fetch';\nimport Alert from '../common/Alert'\nimport EditUser from './EditUser'\nimport moment from 'moment'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default function TableCampus(props) {\n\n    const [mResponse, setMResponse] = useState();\n    const [show, setShow] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [user, setUser] = useState();\n\n    const deleteUser = async (id)=>{\n        try {\n            const { data } = await publicFetch.delete(\n            `${props.idCampus}/user/delete/${id}` \n            );\n                \n            setMResponse(data.message)\n            setShow(true)\n        }\n        catch (error) {\n            const { data } = error.response;\n            setMResponse(data.message)\n            setShow(true)\n        }\n    }\n\n    const close = ()=>{\n        setShow(false)\n    }\n\n    const edit = (user)=>{\n        setUser(user)\n        setShowModal(true)\n    }\n\n    return (\n        <>\n            {showModal?<EditUser setShowModal={setShowModal} user={user} showModal={showModal}/>:<>\n            <GradientBar />\n            <Card>\n                {show?<Alert text={mResponse} close={close}/>:null}\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden\">\n                    <table className=\"min-w-full leading-normal\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    name\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    lastname\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    email\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    valid until\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    valid\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    edit\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    delete\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.users.map((user) => (\n                            <tr key={user._id}>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                    <div className=\"flex items-center justify-center\">\n                                        <div className=\"ml-3\">\n                                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                {user.firstName}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                    <div className=\"flex items-center justify-center\">\n                                        <div className=\"ml-3\">\n                                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                {user.lastName}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                    <div className=\"flex items-center justify-center\">\n                                        <div className=\"ml-3\">\n                                            <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                {user.email}\n                                            </p>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm ml-5 text-center\">\n                                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                        <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                        </span>\n                                        <span className=\"relative\">\n                                            {/* {user.valid_until.split('T')[0] + \" \" + user.valid_until.split('T')[1].split('.')[0].split(':')[0] + \":\" + user.valid_until.split('T')[1].split('.')[0].split(':')[1]} */}\n                                            {moment(user.valid_until).format('MMMM Do YYYY, hh:mm a')}\n                                            \n                                        </span>\n                                    </span>\n                                </td>\n\n                                <td className=\"px-0 py-5 border-b border-gray-200  text-sm items-center text-center\">\n                                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                        <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                        </span>\n                                        <span className=\"relative\">\n                                            {user.valid? \"Active\":\"Disable\"}\n                                        </span>\n                                    </span>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200  text-sm items-center\">\n                                    <div className=\"flex justify-center\">\n                                        <button className=\"rounded-full shadow flex items-center px-3 py-3\" onClick={()=>edit(user)}>\n                                            <FontAwesomeIcon icon={faEdit} />\n                                        </button>\n                                    </div>\n                                </td>\n                                <td className=\"px-0 py-5 border-b border-gray-200 text-sm items-center\">\n                                    <div className=\"flex justify-center\">\n                                        <button className=\"rounded-full shadow hover:text-indigo-900 flex items-center px-3 py-3 \" onClick={()=>deleteUser(user._id)}>\n                                            <FontAwesomeIcon icon={faTrashAlt} />\n                                        </button>\n                                    </div>\n                                </td>\n                            </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </Card></>}\n        </>\n    )\n}\n","import React , {useState, useEffect} from 'react'\nimport Button from '../components/common/GradientButton'\nimport AddUser from '../components/user/AddUser'\nimport TableUsers from '../components/user/TableUsers'\nimport PageTitle from '../components/common/PageTitle';\nimport { publicFetch } from './../util/fetch';\n\nimport {\n    useParams\n} from \"react-router-dom\";\n\nexport default function Users() {\n\n    const [showAdd, setShowAdd] = useState(false);\n    const [users, setUsers ]=  useState([])\n\n    let { idCampus } = useParams();\n\n    useEffect(() => { \n        const listUsers = async () => {\n            const {data} = await publicFetch.get(\n                `${idCampus}/users`\n            )\n    \n            setUsers(data.users)\n        }\n\n        listUsers()\n    })\n\n    const showAddPanel =()=>{\n        setShowAdd(!showAdd)\n    }\n\n    return (\n        <>\n            <div className=\"container mx-auto px-4\">\n                <PageTitle title=\"Users\" />\n                <div className=\"py-8\">\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div>\n                            <TableUsers idCampus={idCampus} users={users} />\n                        </div>\n                        <div className=\"container-add\">\n                            <Button text=\"Add > \" onClick={showAddPanel}/>\n                        </div>\n                        <div style={{display: `${showAdd ? 'block' : 'none'}`}}>\n                            <AddUser idCampus={idCampus} showPanel={showAddPanel} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}