{"version":3,"sources":["components/common/Alert.js","components/common/PageTitle.js","components/campus/AddCampus.js","components/campus/EditCampus.js","components/campus/TableCampus.js","pages/Campus.js"],"names":["Alert","text","close","className","onClick","PageTitle","title","AddCampus","props","AddSchema","Yup","shape","name","required","city","address","zipcode","useState","addCampusSuccess","setAddCampusSuccess","addCampusError","setAddCampusError","redirectCampus","setRedirectOnCampus","addCampus","setCampus","submitCredentials","credentials","a","publicFetch","post","data","message","setTimeout","response","showAddPanel","window","location","reload","push","to","GradientBar","Card","initialValues","active","onSubmit","values","validationSchema","FormSuccess","FormError","type","value","Label","FormInput","ariaLabel","placeholder","GradientButton","loading","Modal","EditSchema","editCampus","setEditCampus","submitCampus","put","campus","_id","setShowModal","showModal","ubication","GradientLink","TableCampus","mResponse","setMResponse","show","setShow","deleteCampus","id","delete","scope","campuses","map","key","aria-hidden","edit","icon","faEdit","faTrashAlt","Campus","showAdd","setShowAdd","setCampuses","useEffect","get","listCampuses","style","display","showPanel"],"mappings":"sHAAA,sDAEe,SAASA,EAAT,GAA+B,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACjC,OACI,oCACI,yBAAKC,UAAU,mEACX,0BAAMA,UAAU,0CACZ,uBAAGA,UAAU,iBAEjB,0BAAMA,UAAU,kCACZ,uBAAGA,UAAU,cAAcF,IAE/B,4BAAQE,UAAU,sHAAsHC,QAASF,GAC7I,4C,iCCbpB,oBAUeG,IARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,yBAAKH,UAAU,gBACb,wBAAIA,UAAU,oCACXG,O,2NCQQ,SAASC,EAAUC,GAG9B,IAAMC,EAAYC,MAAaC,MAAM,CACjCC,KAAMF,MAAaG,SACf,2BAEJC,KAAMJ,MAAaG,SACf,yBAEJE,QAASL,MAAaG,SAClB,uBAEJG,QAASN,MAAaG,SAClB,yBAd6B,EAkBWI,qBAlBX,mBAkB9BC,EAlB8B,KAkBZC,EAlBY,OAmBOF,qBAnBP,mBAmB9BG,EAnB8B,KAmBdC,EAnBc,OAoBSJ,oBAAS,GApBlB,mBAoB9BK,EApB8B,KAoBdC,EApBc,OAuBNN,oBAAS,GAvBH,mBAuB9BO,EAvB8B,KAuBnBC,EAvBmB,KAyB/BC,EAAiB,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,sEAElBH,GAAU,GAFQ,SAGKI,IAAYC,KAAZ,SAEnBH,GALc,gBAGVI,EAHU,EAGVA,KAKZZ,EAAoBY,EAAKC,SACzBX,EAAkB,IAElBY,YAAW,WACPV,GAAoB,KACrB,IAbmB,kDAiBlBE,GAAU,GACFM,EAAS,KAAMG,SAAfH,KACRV,EAAkBU,EAAKC,SACvBb,EAAoB,IApBF,yBAuBlBX,EAAM2B,eACNC,OAAOC,SAASC,SAxBE,6EAAH,sDA4BvB,OACI,oCACKhB,GAAkB,kBAAC,IAAD,CAAUiB,MAAI,EAACC,GAAG,aACrC,6BAASrC,UAAU,kCACf,kBAACsC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,yBAAKvC,UAAU,8DACX,yBAAKA,UAAU,oDACX,kBAAC,IAAD,CACIwC,cAAe,CACf/B,KAAM,GACNE,KAAM,GACNE,QAAS,GACTD,QAAS,GACT6B,QAAQ,GAERC,SAAU,SAAAC,GAAM,OAChBpB,EAAkBoB,IAElBC,iBAAkBtC,IAEjB,gBAAEqC,EAAF,EAAEA,OAAF,OACD,kBAAC,IAAD,CAAM3C,UAAU,QACXe,GACD,kBAAC8B,EAAA,EAAD,CAAa/C,KAAMiB,IAElBE,GACD,kBAAC6B,EAAA,EAAD,CAAWhD,KAAMmB,IAEjB,2BACA8B,KAAK,SACLtC,KAAK,WACLuC,MAAM,SAEN,6BACI,yBAAKhD,UAAU,QACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,QACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,UAEhB,kBAACoD,EAAA,EAAD,CACIC,UAAU,OACV1C,KAAK,OACLsC,KAAK,OACLK,YAAY,UAGpB,yBAAKpD,UAAU,mBACX,yBAAKA,UAAU,aACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,YAEhB,6BACI,2BAAOE,UAAU,4BACb,kBAAC,IAAD,CAAO+C,KAAK,WAAW/C,UAAU,0BAA0BS,KAAK,WAChE,0BAAMT,UAAU,aAAa2C,EAAOF,OAAS,SAAU,eAKvE,wBAAIzC,UAAU,qBAAd,aACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,QACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,UAEhB,kBAACoD,EAAA,EAAD,CACIC,UAAU,OACV1C,KAAK,OACLsC,KAAK,OACLK,YAAY,UAGpB,yBAAKpD,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,aAEhB,6BACA,kBAACoD,EAAA,EAAD,CACIC,UAAU,UACV1C,KAAK,UACLsC,KAAK,UACLK,YAAY,cAIpB,yBAAKpD,UAAU,kBACX,yBAAKA,UAAU,aACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,aAEhB,6BACA,kBAACoD,EAAA,EAAD,CACIC,UAAU,UACV1C,KAAK,UACLsC,KAAK,SACLK,YAAY,gBAO5B,yBAAKpD,UAAU,yCACf,kBAACqD,EAAA,EAAD,CACIN,KAAK,SACLjD,KAAK,OACLwD,QAASjC,e,qBC9JlC,SAASkC,EAAMlD,GAC5B,IAAMmD,EAAajD,MAAaC,MAAM,CACpCC,KAAMF,MAAaG,SACf,2BAEJC,KAAMJ,MAAaG,SACf,yBAEJE,QAASL,MAAaG,SAClB,uBAEJG,QAASN,MAAaG,SAClB,yBAZ6B,EAeeI,qBAff,mBAe1BC,EAf0B,KAeRC,EAfQ,OAgBWF,qBAhBX,mBAgB1BG,EAhB0B,KAgBVC,EAhBU,OAmBGJ,oBAAS,GAnBZ,mBAmB1B2C,EAnB0B,KAmBdC,EAnBc,KAqB3BC,EAAY,uCAAG,WAAMhB,GAAN,mBAAAlB,EAAA,sEAEbiC,GAAc,GAFD,SAGUhC,IAAYkC,IAAZ,iBACTvD,EAAMwD,OAAOC,KACvBnB,GALS,gBAGLf,EAHK,EAGLA,KAMRZ,EAAoBY,EAAKC,SACzBX,EAAkB,IAVL,kDAcbwC,GAAc,GACN9B,EAAS,KAAMG,SAAfH,KACRV,EAAkBU,EAAKC,SACvBb,EAAoB,IAjBP,yBAoBbc,YAAW,WACPzB,EAAM0D,cAAa,GACnB9B,OAAOC,SAASC,WACjB,KAvBU,6EAAH,sDA2BpB,OACE,oCACG9B,EAAM2D,UACL,oCACI,6BAAShE,UAAU,kCACf,kBAACsC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,yBAAKvC,UAAU,8DACX,yBAAKA,UAAU,oDACX,kBAAC,IAAD,CACIwC,cAAe,CACX/B,KAAMJ,EAAMwD,OAAOpD,KACnBE,KAAMN,EAAMwD,OAAOI,UAAUtD,KAC7BE,QAASR,EAAMwD,OAAOI,UAAUpD,QAChCD,QAASP,EAAMwD,OAAOI,UAAUrD,QAChC6B,OAAQpC,EAAMwD,OAAOpB,QAEzBC,SAAU,SAAAC,GAAM,OAChBgB,EAAahB,IAEbC,iBAAkBY,IAEjB,gBAAEb,EAAF,EAAEA,OAAF,OACD,kBAAC,IAAD,CAAM3C,UAAU,QACXe,GACD,kBAAC8B,EAAA,EAAD,CAAa/C,KAAMiB,IAElBE,GACD,kBAAC6B,EAAA,EAAD,CAAWhD,KAAMmB,IAEjB,2BACA8B,KAAK,SACLtC,KAAK,WACLuC,MAAM,SAEN,6BACI,yBAAKhD,UAAU,QACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,QACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,UAEhB,kBAACoD,EAAA,EAAD,CACIC,UAAU,OACV1C,KAAK,OACLsC,KAAK,OACLK,YAAY,UAGpB,yBAAKpD,UAAU,mBACX,yBAAKA,UAAU,aACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,YAEhB,6BACI,2BAAOE,UAAU,4BACb,kBAAC,IAAD,CAAO+C,KAAK,WAAW/C,UAAU,0BAA0BS,KAAK,WAChE,0BAAMT,UAAU,aAAa2C,EAAOF,OAAS,SAAU,eAKvE,wBAAIzC,UAAU,qBAAd,aACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,QACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,UAEhB,kBAACoD,EAAA,EAAD,CACIC,UAAU,OACV1C,KAAK,OACLsC,KAAK,OACLK,YAAY,UAGpB,yBAAKpD,UAAU,oBACX,yBAAKA,UAAU,aACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,aAEhB,6BACA,kBAACoD,EAAA,EAAD,CACIC,UAAU,UACV1C,KAAK,UACLsC,KAAK,UACLK,YAAY,cAIpB,yBAAKpD,UAAU,kBACX,yBAAKA,UAAU,aACX,kBAACiD,EAAA,EAAD,CAAOnD,KAAK,aAEhB,6BACA,kBAACoD,EAAA,EAAD,CACIC,UAAU,UACV1C,KAAK,UACLsC,KAAK,SACLK,YAAY,gBAO5B,yBAAKpD,UAAU,yCACX,kBAACqD,EAAA,EAAD,CACIN,KAAK,SACLjD,KAAK,OACLwD,QAASG,IAEb,yBAAKzD,UAAU,QACX,kBAACkE,EAAA,EAAD,CACI7B,GAAG,WACHvC,KAAK,qBAY3C,M,oBC1KK,SAASqE,EAAY9D,GAAQ,IAAD,EAELS,qBAFK,mBAEhCsD,EAFgC,KAErBC,EAFqB,OAGfvD,oBAAS,GAHM,mBAGhCwD,EAHgC,KAG1BC,EAH0B,OAILzD,oBAAS,GAJJ,mBAIhCkD,EAJgC,KAIrBD,EAJqB,OAKXjD,qBALW,mBAKhC+C,EALgC,KAKxBvC,EALwB,KAOjCkD,EAAY,uCAAG,WAAOC,GAAP,mBAAAhD,EAAA,+EAEUC,IAAYgD,OAAZ,wBACND,IAHJ,gBAEL7C,EAFK,EAELA,KAIRyC,EAAazC,EAAKC,SAClB0C,GAAQ,GAPK,gDAUL3C,EAAS,KAAMG,SAAfH,KACRyC,EAAazC,EAAKC,SAClB0C,GAAQ,GAZK,QAejBzC,YAAW,WACPG,OAAOC,SAASC,WACjB,KAjBc,yDAAH,sDA6BlB,OACI,oCACK6B,EAAU,kBAAC,EAAD,CAAYD,aAAcA,EAAcF,OAAQA,EAAQG,UAAWA,IAAa,oCAC3F,kBAAC1B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACK+B,EAAK,kBAACzE,EAAA,EAAD,CAAOC,KAAMsE,EAAWrE,MAd5B,WACVwE,GAAQ,MAa8C,KAC9C,yBAAKvE,UAAU,sDACX,2BAAOA,UAAU,6BACb,+BACI,4BACI,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,QAGA,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,UAGA,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,aAGA,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,YAGA,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,SAGA,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,QAGA,wBAAI2E,MAAM,MAAM3E,UAAU,yGAA1B,YAKR,+BACKK,EAAMuE,SAASC,KAAI,SAAChB,GAAD,OAChB,wBAAIiB,IAAKjB,EAAOC,KACZ,wBAAI9D,UAAU,uDACV,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,QACX,uBAAGA,UAAU,oCACR6D,EAAOpD,SAKxB,wBAAIT,UAAU,mEACV,0BAAMA,UAAU,8EACZ,0BAAM+E,cAAY,OAAO/E,UAAU,0DAEnC,0BAAMA,UAAU,YACX6D,EAAOpB,OAAQ,SAAS,aAIrC,wBAAIzC,UAAU,mEACV,0BAAMA,UAAU,8EACZ,0BAAM+E,cAAY,OAAO/E,UAAU,0DAEnC,0BAAMA,UAAU,YACX6D,EAAOI,UAAUrD,QAAU,KAAMiD,EAAOI,UAAUtD,KAAO,KAAOkD,EAAOI,UAAUpD,WAI9F,wBAAIb,UAAU,uDACV,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CACIqC,GAAI,IAAMwB,EAAOC,IAAM,YACvBhE,KAAK,UAIjB,wBAAIE,UAAU,4DACV,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CACIqC,GAAI,IAAMwB,EAAOC,IAAM,SACvBhE,KAAK,UAKjB,wBAAIE,UAAU,4DACV,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,kDAAkDC,QAAS,kBAvFxG,SAAC4D,GACVvC,EAAUuC,GACVE,GAAa,GAqFwGiB,CAAKnB,KAClF,kBAAC,IAAD,CAAiBoB,KAAMC,SAInC,wBAAIlF,UAAU,2DACV,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,yEAAyEC,QAAS,kBAAIuE,EAAaX,EAAOC,OACxH,kBAAC,IAAD,CAAiBmB,KAAME,mB,aCrIxD,SAASC,IAAU,IAAD,EAECtE,oBAAS,GAFV,mBAEtBuE,EAFsB,KAEbC,EAFa,OAGIxE,mBAAS,IAHb,mBAGtB8D,EAHsB,KAGZW,EAHY,KAM7BC,qBAAU,YACY,uCAAG,8BAAA/D,EAAA,sEACIC,IAAY+D,IAAZ,UADJ,gBACV7D,EADU,EACVA,KAIP2D,EAAY3D,EAAKiC,QALA,2CAAH,qDAQlB6B,KACF,IAEF,IAAM1D,EAAc,WAChBsD,GAAYD,IAGhB,OACI,oCACI,yBAAKrF,UAAU,0BACX,kBAACE,EAAA,EAAD,CAAWC,MAAM,WACjB,yBAAKH,UAAU,QACX,yBAAKA,UAAU,oDACX,6BACI,kBAACmE,EAAD,CAAaS,SAAUA,KAE3B,yBAAK5E,UAAU,iBACX,kBAAC,IAAD,CAAQF,KAAK,SAASG,QAAS+B,KAEnC,yBAAK2D,MAAO,CAACC,QAAQ,GAAD,OAAKP,EAAU,QAAU,UACzC,kBAACjF,EAAD,CAAWyF,UAAW7D","file":"static/js/4.a89b8de5.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert({text, close}) {\n    return (\n        <>\n            <div className=\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-teal-500\">\n                <span className=\"text-xl inline-block mr-5 align-middle\">\n                    <i className=\"fas fa-bell\" />\n                </span>\n                <span className=\"inline-block align-middle mr-8\">\n                    <b className=\"capitalize\">{text}</b>\n                </span>\n                <button className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\" onClick={close} >\n                    <span>Ã—</span>\n                </button>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nconst PageTitle = ({ title }) => (\n  <div className=\"my-1 sm:my-4\">\n    <h2 className=\"text-gray-800 font-bold text-2xl\">\n      {title}\n    </h2>\n  </div>\n);\n\nexport default PageTitle;\n","import React,{ useState } from 'react'\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik, Field} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\nimport { Redirect } from 'react-router-dom';\n\nexport default function AddCampus(props) {\n\n\n    const AddSchema = Yup.object().shape({\n        name: Yup.string().required(\n            'Campus name is required'\n        ), \n        city: Yup.string().required(\n            'City name is required'\n          ),\n        address: Yup.string().required(\n            'Address is required'\n        ),\n        zipcode: Yup.string().required(\n            'ZipCode is required'\n          ), \n    });\n\n    const [addCampusSuccess, setAddCampusSuccess] = useState();\n    const [addCampusError, setAddCampusError] = useState();\n    const [redirectCampus, setRedirectOnCampus] = useState(false)\n    \n    \n    const [addCampus, setCampus] = useState(false);\n    \n    const submitCredentials = async credentials => {\n        try {\n            setCampus(true);\n            const { data } = await publicFetch.post(\n                `campus`,\n                credentials\n            );\n    \n        setAddCampusSuccess(data.message);\n        setAddCampusError('');\n    \n        setTimeout(() => {\n            setRedirectOnCampus(true);\n        }, 50);\n\n        }\n        catch (error) {\n            setCampus(false);\n            const { data } = error.response;\n            setAddCampusError(data.message);\n            setAddCampusSuccess('');\n        }\n        finally{\n            props.showAddPanel()\n            window.location.reload();\n        }\n        \n    };\n    return (\n        <>\n            {redirectCampus && <Redirect push to=\"/campus2\" />}\n            <section className=\"w-4/5 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                name: '',\n                                city: '',\n                                zipcode: '',\n                                address: '',\n                                active: false\n                                }}\n                                onSubmit={values =>\n                                submitCredentials(values)\n                                }\n                                validationSchema={AddSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {addCampusSuccess && (\n                                    <FormSuccess text={addCampusSuccess} />\n                                    )}\n                                    {addCampusError && (\n                                    <FormError text={addCampusError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Name\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Name\"\n                                                    name=\"name\"\n                                                    type=\"text\"\n                                                    placeholder=\"Name\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Status\" />\n                                                </div>\n                                                <div>\n                                                    <label className=\"inline-flex items-center\">\n                                                        <Field type=\"checkbox\" className=\"form-checkbox mt-2 ml-4\" name=\"active\" />\n                                                        <span className=\"ml-4 mt-2\">{values.active ? \"Active\": \"Disable\"}</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <h2 className=\"display mt-6 mb-4\">Ubication</h2>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-64\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"City\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"City\"\n                                                    name=\"city\"\n                                                    type=\"text\"\n                                                    placeholder=\"City\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-full\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Address\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Address\"\n                                                    name=\"address\"\n                                                    type=\"address\"\n                                                    placeholder=\"Address\"\n                                                />\n                                                </div>\n                                            </div>\n                                            <div className=\"mb-2 ml-3 w-64\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"ZipCode\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Zipcode\"\n                                                    name=\"zipcode\"\n                                                    type=\"number\"\n                                                    placeholder=\"Zipcode\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"mt-6 flex items-center justify-center\">\n                                    <GradientButton\n                                        type=\"submit\"\n                                        text=\"Save\"\n                                        loading={addCampus}\n                                    />\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n    );\n};\n","import React,{useState} from \"react\";\nimport GradientBar from '../common/GradientBar';\nimport Card from '../common/Card';\nimport { Form, Formik, Field} from 'formik';\nimport FormSuccess from '../FormSuccess'\nimport FormError from '../common/FormError'\nimport FormInput from '../FormInput'\nimport Label from '../common/Label';\nimport GradientButton from '../common/GradientButton';\nimport GradientLink from '../common/GradientLink';\nimport * as Yup from 'yup';\nimport { publicFetch } from '../../util/fetch';\n\nexport default function Modal(props) {\n  const EditSchema = Yup.object().shape({\n    name: Yup.string().required(\n        'Campus name is required'\n    ), \n    city: Yup.string().required(\n        'City name is required'\n      ),\n    address: Yup.string().required(\n        'Address is required'\n    ),\n    zipcode: Yup.string().required(\n        'ZipCode is required'\n      ), \n    });\n    const [addCampusSuccess, setAddCampusSuccess] = useState();\n    const [addCampusError, setAddCampusError] = useState();\n    \n    \n    const [editCampus, setEditCampus] = useState(false);\n    \n    const submitCampus = async values => {\n        try {\n            setEditCampus(true);\n            const { data } = await publicFetch.put(\n                `campus/${props.campus._id}`,\n                values\n            );\n\n    \n            setAddCampusSuccess(data.message);\n            setAddCampusError('');\n\n        }\n        catch (error) {\n            setEditCampus(false);\n            const { data } = error.response;\n            setAddCampusError(data.message);\n            setAddCampusSuccess('');\n        }\n        finally{\n            setTimeout(() => {\n                props.setShowModal(false)\n                window.location.reload();\n            }, 1000);\n        }\n\n    };\n  return (\n    <>\n      {props.showModal ? (\n        <>\n            <section className=\"w-3/4 h-screen m-auto sm:pt-10\">\n                <GradientBar />\n                <Card>\n                    <div className=\"flex items-center justify-center py-7 px-2 sm:px-3 lg:px-3\">\n                        <div className=\"max-w-md w-full flex items-center justify-center\">\n                            <Formik\n                                initialValues={{\n                                    name: props.campus.name,\n                                    city: props.campus.ubication.city,\n                                    zipcode: props.campus.ubication.zipcode,\n                                    address: props.campus.ubication.address,\n                                    active: props.campus.active\n                                }}\n                                onSubmit={values =>\n                                submitCampus(values)\n                                }\n                                validationSchema={EditSchema}\n                            >\n                                {({values}) => (\n                                <Form className=\"mt-8\">\n                                    {addCampusSuccess && (\n                                    <FormSuccess text={addCampusSuccess} />\n                                    )}\n                                    {addCampusError && (\n                                    <FormError text={addCampusError} />\n                                    )}\n                                    <input\n                                    type=\"hidden\"\n                                    name=\"remember\"\n                                    value=\"true\"\n                                    />\n                                    <div>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-1/2\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"Name\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"Name\"\n                                                    name=\"name\"\n                                                    type=\"text\"\n                                                    placeholder=\"Name\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-1/2\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Status\" />\n                                                </div>\n                                                <div>\n                                                    <label className=\"inline-flex items-center\">\n                                                        <Field type=\"checkbox\" className=\"form-checkbox mt-2 ml-4\" name=\"active\" />\n                                                        <span className=\"ml-4 mt-2\">{values.active ? \"Active\": \"Disable\"}</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <h2 className=\"display mt-6 mb-4\">Ubication</h2>\n                                        <div className=\"flex\">\n                                            <div className=\"mb-2 mr-2 w-64\">\n                                                <div className=\"mb-1\">\n                                                    <Label text=\"City\" />\n                                                </div>\n                                                <FormInput\n                                                    ariaLabel=\"City\"\n                                                    name=\"city\"\n                                                    type=\"text\"\n                                                    placeholder=\"City\"\n                                                />\n                                            </div>\n                                            <div className=\"mb-2 ml-2 w-full\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"Address\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Address\"\n                                                    name=\"address\"\n                                                    type=\"address\"\n                                                    placeholder=\"Address\"\n                                                />\n                                                </div>\n                                            </div>\n                                            <div className=\"mb-2 ml-3 w-64\">\n                                                <div className=\"mb-1 ml-4\">\n                                                    <Label text=\"ZipCode\" />\n                                                </div>\n                                                <div>\n                                                <FormInput\n                                                    ariaLabel=\"Zipcode\"\n                                                    name=\"zipcode\"\n                                                    type=\"number\"\n                                                    placeholder=\"Zipcode\"\n                                                />\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"mt-6 flex items-center justify-center\">\n                                        <GradientButton\n                                            type=\"submit\"\n                                            text=\"Save\"\n                                            loading={editCampus}\n                                        />\n                                        <div className=\"ml-6\">\n                                            <GradientLink\n                                                to=\"/campus2\"\n                                                text=\"Exit\"\n                                            />\n                                        </div>\n                                    </div>\n                                </Form>\n                                )}\n                            </Formik>\n                        </div>\n                    </div>\n                </Card>\n            </section>\n        </>\n      ) : null}\n    </>\n  );\n}","import React,{useState} from 'react'\nimport ButtonLink from '../common/GradientLink';\nimport Card from '../common/Card';\nimport GradientBar from '../common/GradientBar';\nimport { publicFetch } from '../../util/fetch';\nimport Alert from '../common/Alert'\nimport EditCampus from './EditCampus'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEdit,\n  faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default function TableCampus(props) {\n\n    const [mResponse, setMResponse] = useState();\n    const [show, setShow] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [campus, setCampus] = useState();\n\n    const deleteCampus = async (id)=>{\n        try {\n            const { data } = await publicFetch.delete(\n            `campus/delete/${id}` \n            );\n                \n            setMResponse(data.message)\n            setShow(true)\n        }\n        catch (error) {\n            const { data } = error.response;\n            setMResponse(data.message)\n            setShow(true)\n        }\n\n        setTimeout(() => {\n            window.location.reload()\n        }, 500);\n    }\n\n    const close = ()=>{\n        setShow(false)\n    }\n\n    const edit = (campus)=>{\n        setCampus(campus)\n        setShowModal(true)\n    }\n\n    return (\n        <>\n            {showModal?<EditCampus setShowModal={setShowModal} campus={campus} showModal={showModal}/>:<>\n            <GradientBar />\n            <Card>\n                {show?<Alert text={mResponse} close={close}/>:null}\n                <div className=\"inline-block min-w-full rounded-lg overflow-hidden\">\n                    <table className=\"min-w-full leading-normal\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    name\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    status\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    ubication\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    contacts\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    users\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    edit\n                                </th>\n                                <th scope=\"col\" className=\"px-0 py-3 bg-white  border-b border-gray-200 text-gray-800  text-center text-sm uppercase font-normal\">\n                                    delete\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.campuses.map((campus) => (\n                                <tr key={campus._id}>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <div className=\"flex items-center justify-center\">\n                                            <div className=\"ml-3\">\n                                                <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                    {campus.name}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                            <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                            </span>\n                                            <span className=\"relative\">\n                                                {campus.active? \"Active\":\"Disable\"}\n                                            </span>\n                                        </span>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm text-center\">\n                                        <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\n                                            <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\n                                            </span>\n                                            <span className=\"relative\">\n                                                {campus.ubication.address + \", \" +campus.ubication.city + \", \" + campus.ubication.zipcode}\n                                            </span>\n                                        </span>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm\">\n                                        <div className=\"flex justify-center\">\n                                            <ButtonLink\n                                                to={\"/\" + campus._id + \"/contacts\"}\n                                                text='Ver'\n                                                />\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 bg-white text-sm ml-5\">\n                                        <div className=\"flex justify-center\">\n                                            <ButtonLink\n                                                to={\"/\" + campus._id + \"/users\"}\n                                                text='Ver'\n                                                />\n                                        </div>\n                                    </td>\n\n                                    <td className=\"px-0 py-5 border-b border-gray-200  text-sm items-center\">\n                                        <div className=\"flex justify-center\">\n                                            <button className=\"rounded-full shadow flex items-center px-3 py-3\" onClick={()=>edit(campus)}>\n                                                <FontAwesomeIcon icon={faEdit} />\n                                            </button>\n                                        </div>\n                                    </td>\n                                    <td className=\"px-0 py-5 border-b border-gray-200 text-sm items-center\">\n                                        <div className=\"flex justify-center\">\n                                            <button className=\"rounded-full shadow hover:text-indigo-900 flex items-center px-3 py-3 \" onClick={()=>deleteCampus(campus._id)}>\n                                                <FontAwesomeIcon icon={faTrashAlt} />\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                             ))}\n                        </tbody>\n                    </table>\n                </div>\n            </Card></>}\n        </>\n    )\n}\n","import React , {useState, useEffect} from 'react'\nimport Button from '../components/common/GradientButton'\nimport AddCampus from '../components/campus/AddCampus'\nimport TableCampus from '../components/campus/TableCampus'\nimport PageTitle from '../components/common/PageTitle';\nimport { publicFetch } from './../util/fetch';\n\nexport default function Campus() {\n\n    const [showAdd, setShowAdd] = useState(false);\n    const [campuses, setCampuses ]=  useState([])\n\n    \n    useEffect(() => { \n        const listCampuses = async () => {\n            const {data} = await publicFetch.get(\n                `campus`\n            )\n    \n            setCampuses(data.campus)\n        }\n\n        listCampuses()\n    },[])\n\n    const showAddPanel =()=>{\n        setShowAdd(!showAdd)\n    }\n\n    return (\n        <>\n            <div className=\"container mx-auto px-4\">\n                <PageTitle title=\"Campus\" />\n                <div className=\"py-8\">\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div>\n                            <TableCampus campuses={campuses} />\n                        </div>\n                        <div className=\"container-add\">\n                            <Button text=\"Add > \" onClick={showAddPanel}/>\n                        </div>\n                        <div style={{display: `${showAdd ? 'block' : 'none'}`}}>\n                            <AddCampus showPanel={showAddPanel}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n"],"sourceRoot":""}